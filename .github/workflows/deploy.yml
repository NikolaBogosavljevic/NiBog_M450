name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

permissions:
  contents: write  # Allow write access to repository contents, which is necessary to push
  pages: write     # Allow write access to GitHub Pages

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu environment

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2  # Checkout the repository

    # Step 1: Build the backend with Maven
    - name: Build Backend
      run: mvn clean install -DskipTests=true
      working-directory: "Project LB2/recipe-planner-backend"  # Quote the directory path with spaces

    # Step 2: Run Backend Tests
    - name: Run Backend Tests
      run: mvn test
      continue-on-error: true  # Continue even if tests fail (optional)
      working-directory: "Project LB2/recipe-planner-backend"  # Quote the directory path with spaces

    # Step 3: Store Backend Test Results as Artifacts
    - name: Store Backend Test Results
      uses: actions/upload-artifact@v3  # Updated to v3
      with:
        name: backend-test-results
        path: "Project LB2/recipe-planner-backend/target/test-classes"  # Quote the path

    # Step 4: Deploy to GitHub Pages
    - name: Deploy Test Results to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3  # Action for deploying to GitHub Pages
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}  # Use the GitHub token provided by Actions
        publish_dir: "Project LB2/recipe-planner-backend/target/test-classes"  # Folder with test results
        publish_branch: gh-pages  # The branch that GitHub Pages uses

    # Step 5: Install Dependencies for Frontend (Cypress)
    - name: Install Frontend Dependencies
      run: |
        cd "Project LB2/recipe-planner-frontend"  # Wrap the directory path in quotes
        npm install  # Install dependencies

    # Step 6: Run Cypress Tests
    - name: Run Cypress Tests
      run: |
        cd "Project LB2/recipe-planner-frontend"  # Wrap the directory path in quotes
        npx cypress run  # Run the Cypress tests

    # Step 7: Store Cypress Test Results as Artifacts
    - name: Store Cypress Test Results
      uses: actions/upload-artifact@v3  # Updated to v3
      with:
        name: cypress-test-results
        path: "Project LB2/recipe-planner-frontend/cypress/results"  # Assuming your Cypress results are stored here

    # Step 8: Clean up (optional)
    - name: Clean up
      run: git checkout main  # Switch back to main branch after deployment
